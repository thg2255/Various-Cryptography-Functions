import java.io.*;
import java.net.*;
import java.security.*;
import java.util.Arrays;
import java.time.LocalTime;
import javax.crypto.*;
import javax.crypto.spec.*;

public class CipherServer
{
	public static void main(String[] args) throws Exception 
	{
		try {
			int port = 7999;
			ServerSocket server = new ServerSocket(port);
			
			Socket s = server.accept();
		
			// YOU NEED TO DO THESE STEPS:
			// -Read the key from the file generated by the client.
			// -Use the key to decrypt the incoming message from socket s.		
			// -Print out the decrypt String to see if it matches the orignal message.
			
			// Read DES Key file
			String key_filename = "keyfile_" + LocalTime.now().getMinute() + ".txt";
			SecretKey key;
			ObjectInputStream key_input = new ObjectInputStream(new FileInputStream(key_filename));
			key = (SecretKey) key_input.readObject(); 
	        
	        Cipher cipher = Cipher.getInstance("DES/ECB/PKCS5Padding");
	        cipher.init(Cipher.DECRYPT_MODE, key);
	         
            // Read encrypted message
            byte[] encrypted_message;
            
            try (InputStream is = s.getInputStream()){
	            ByteArrayOutputStream b = new ByteArrayOutputStream();
	            byte[] bytes = new byte[1024];
	            int i;
	            
	            while((i = is.read(bytes, 0, bytes.length)) != -1) {
	            	b.write(bytes, 0, i);
	            }
	            
	            b.flush();
	            encrypted_message = b.toByteArray();
            }
            
	        
	        // Debugging
	        // Print out the key
            System.out.println("Read Key from file: " + Arrays.toString(key.getEncoded()));
	        // Print out received encrypted message
            System.out.println("Received encrypted message: " + Arrays.toString(encrypted_message));
            
            byte[] decrypted = cipher.doFinal(encrypted_message);
	        		        
	        // Print out the decrypted message
	        System.out.println("Decrypted message: " + new String(decrypted));
	        
	        // Close the connection
            server.close();
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}